"""empty message

Revision ID: d92e8457ede1
Revises: 9a8c8cc91f12
Create Date: 2023-01-20 08:03:19.837081

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'd92e8457ede1'
down_revision = '9a8c8cc91f12'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('Company',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('rating', sa.String(), nullable=True),
    sa.Column('industry', sa.String(), nullable=True),
    sa.Column('size', sa.String(), nullable=True),
    sa.Column('overview', sa.String(), nullable=True),
    sa.Column('number_employees', sa.Integer(), nullable=True),
    sa.Column('location', sa.String(), nullable=True),
    sa.Column('main_country_name', sa.String(), nullable=True),
    sa.Column('main_country_number_employees', sa.Integer(), nullable=True),
    sa.Column('other_locations_employees', sa.String(), nullable=True),
    sa.Column('other_locations_employees_html', sa.String(), nullable=True),
    sa.Column('profile_url', sa.String(), nullable=True),
    sa.Column('homepage_url', sa.String(), nullable=True),
    sa.Column('timestamp_created', sa.DateTime(), nullable=True),
    sa.Column('timestamp_updated', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('Company', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_Company_homepage_url'), ['homepage_url'], unique=False)
        batch_op.create_index(batch_op.f('ix_Company_profile_url'), ['profile_url'], unique=False)

    op.create_table('SearchModel',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('what', sa.String(), nullable=True),
    sa.Column('where', sa.String(), nullable=True),
    sa.Column('age', sa.String(), nullable=True),
    sa.Column('radius', sa.String(), nullable=True),
    sa.Column('experience', postgresql.ARRAY(sa.String()), nullable=True),
    sa.Column('job_category', sa.Integer(), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), server_default=sa.text('false'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('Task',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('timestamp', sa.DateTime(timezone=True), nullable=True),
    sa.Column('verification_code', sa.String(), nullable=True),
    sa.Column('state', sa.String(), nullable=True),
    sa.Column('info', sa.JSON(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('User',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(), server_default='unnamed', nullable=False),
    sa.Column('linkedin_email', sa.String(), nullable=True),
    sa.Column('linkedin_password', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('CompanyUserNote',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('note', sa.String(), nullable=True),
    sa.Column('is_filtered', sa.Boolean(), server_default=sa.text('false'), nullable=False),
    sa.Column('is_watched', sa.Boolean(), server_default=sa.text('false'), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('company_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['company_id'], ['Company.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['User.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('Job',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(), nullable=True),
    sa.Column('job_type', sa.String(), nullable=True),
    sa.Column('qualifications', sa.String(), nullable=True),
    sa.Column('salary', sa.String(), nullable=True),
    sa.Column('estimated_salary', sa.String(), nullable=True),
    sa.Column('created_str', sa.String(), nullable=True),
    sa.Column('date_posted', sa.Date(), nullable=True),
    sa.Column('multiple_candidates', sa.String(), nullable=True),
    sa.Column('benefits', sa.String(), nullable=True),
    sa.Column('description_markdown', sa.String(), nullable=True),
    sa.Column('description_text', sa.String(), nullable=True),
    sa.Column('description_html', sa.String(), nullable=True),
    sa.Column('hiring_insights', sa.String(), nullable=True),
    sa.Column('url', sa.String(), nullable=True),
    sa.Column('company_id', sa.Integer(), nullable=True),
    sa.Column('timestamp_created', sa.DateTime(), nullable=True),
    sa.Column('timestamp_updated', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['company_id'], ['Company.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('Job', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_Job_url'), ['url'], unique=False)

    op.create_table('JobUserNote',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('note', sa.Text(), nullable=True),
    sa.Column('plan_apply_flag', sa.Boolean(), server_default=sa.text('false'), nullable=False),
    sa.Column('did_apply_flag', sa.Boolean(), server_default=sa.text('false'), nullable=False),
    sa.Column('is_filtered', sa.Boolean(), server_default=sa.text('false'), nullable=False),
    sa.Column('job_id', sa.Integer(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['job_id'], ['Job.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['User.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('Search',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('job_board_name', sa.String(), nullable=True),
    sa.Column('job_id', sa.Integer(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('search_model_id', sa.Integer(), nullable=True),
    sa.Column('task_id', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['job_id'], ['Job.id'], ),
    sa.ForeignKeyConstraint(['search_model_id'], ['SearchModel.id'], ),
    sa.ForeignKeyConstraint(['task_id'], ['Task.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['User.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('Search')
    op.drop_table('JobUserNote')
    with op.batch_alter_table('Job', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_Job_url'))

    op.drop_table('Job')
    op.drop_table('CompanyUserNote')
    op.drop_table('User')
    op.drop_table('Task')
    op.drop_table('SearchModel')
    with op.batch_alter_table('Company', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_Company_profile_url'))
        batch_op.drop_index(batch_op.f('ix_Company_homepage_url'))

    op.drop_table('Company')
    # ### end Alembic commands ###
